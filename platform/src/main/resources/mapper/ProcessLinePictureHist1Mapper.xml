<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seu.platform.dao.mapper.ProcessLinePictureHist1Mapper">

    <resultMap id="BaseResultMap" type="com.seu.platform.dao.entity.ProcessLinePictureHist1">
            <result property="id" column="id" jdbcType="BIGINT"/>
            <result property="cameraId" column="camera_id" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="picturePath" column="picture_path" jdbcType="VARCHAR"/>
            <result property="peopleHasChecked" column="people_has_checked" jdbcType="TINYINT"/>
            <result property="detectionPicturePath" column="detection_picture_path" jdbcType="VARCHAR"/>
            <result property="peopleCount" column="people_count" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,camera_id,update_time,
        picture_path,people_has_checked,detection_picture_path,
        people_count
    </sql>

    <select id="getPendingChecks" resultType="com.seu.platform.dao.entity.ProcessLinePictureHist1">
        select top 9 camera_id,
        min(picture_path) as picture_path,
        min(id) as id
        from process_line_picture_hist_1
        where people_has_checked = 0
        and id not in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
        GROUP BY camera_id
        ORDER BY COUNT(camera_id), camera_id
    </select>
    <select id="getDetectionResult" resultType="com.seu.platform.model.vo.DetectionResultVO">
        select camera_id,
        DATEADD(HOUR, DATEDIFF(HOUR, 0, update_time), 0) as time ,
        detection_picture_path,people_count
        from (
        select camera_id,
        update_time,
        detection_picture_path,
        people_count,
        row_number() over (partition by camera_id order
        by update_time) as rtn
        from process_line_picture_hist_1
        where people_has_checked=1
        and camera_id in
        <foreach collection="ips" separator="," item="ip" open="(" close=")">
            #{ip}
        </foreach>
        and DATEADD(HOUR, DATEDIFF(HOUR, 0, update_time), 0)=#{time}
        ) ranked
        where rtn =1
    </select>
    <select id="lastTime" resultType="java.util.Date">
        select DATEADD(HOUR, DATEDIFF(HOUR, 0, max(update_time)), 0) as time
        from process_line_picture_hist_1
        where people_has_checked = 1
    </select>
    <select id="getMonthTrend" resultType="com.seu.platform.model.dto.TrendDTO">
        select sum(IIF(people_count > 1, 1, 0)) as count,
               cast(update_time as date)        as time
        from process_line_picture_hist_1
        where update_time >= #{st}
          and update_time &lt;= #{et}
        group by cast(update_time as date)
        order by time
    </select>
    <select id="getDailyTrend" resultType="com.seu.platform.model.dto.TrendDTO">
        select sum(IIF(people_count > 1, 1, 0)) as count,
               update_time                      as time
        from process_line_picture_hist_1
        where update_time >= dateadd(DAY, -1, (select max(update_time)
                                               from process_line_picture_hist_1))
        group by update_time
        order by update_time
    </select>
</mapper>
